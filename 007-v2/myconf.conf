#=========================================================================
# Copyright (C) by GemStone Systems, Inc. 1986-2002.  All Rights Reserved
#
# Name - geode.conf
#
# Purpose - Default GeODE System-wide Configuration File
#
# 	As this file is shipped, all default configuration options are
#	commented out.  Configuration options without a default have
#	a definition here.  All options also include a short explanation of
#	purpose.
#
#	Note:  Configuration option strings are case-INSENSITIVE.
#
#	Note 2:  In general, this file is read ONCE by an application at
#	         initialization.
#
#	Note 3:  Certain options accept a list, i.e., of integers or strings.
#		 These options allow list elements to be omitted, e.g.,
#
#	Note 4:  If an option is defined more than once, the last definition
#		 is used.
#
#	Note 5:  [bug4419] Stone (the database monitor) appends to this file
#		 whenever database extents, replicates, sizes, or concurrency
#		 modes are dynamically altered.
#
#		 If you are adding extents to a database, this has the
#		 unfortunate effect of making this file expand at a rate
#		 proportional to the square of the number of extents.  This in
#		 turn may make executables run very slowly, as the parse a
#		 VERY large config file.
#
#		 If you are adding a large number of extents, you may wish
#		 to stop the stone, modify DBF_EXTENT_NAMES, and DBF_EXTENT_SIZES,
#		 hand, and then restart it.  This
#		 will keep the size of this file from going out of control.
#
#
#=========================================================================

#=========================================================================
#  Usage of options 
#
#  Unless the option name begins with "GEM_" or unless the comments state
#   "Used by all executables",  the option is processed only by stone.
#
#  For options which affect all database sessions but which are only processed
#  by stone, the other executables will obtain the value of that option from
#  stone via a TCP/IP connection to stone.

#=========================================================================
# CONCURRENCY_MODE: Concurrency mode used to verify transaction ordering.
# Permissible values:  FULL_CHECKS, NO_RW_CHECKS
# Semantics:
#	FULL_CHECKS: Both read/write and write/write conflicts are detected.
#       NO_RW_CHECKS: Only write/write conflicts are detected.
#
#  Default: FULL_CHECKS
# CONCURRENCY_MODE = FULL_CHECKS; 
#  for non-default settings, uncomment the line below
# CONCURRENCY_MODE = NO_RW_CHECKS;

#=========================================================================
# STN_TRAN_FULL_LOGGING
#    If TRUE, all transactions are logged, and log files are not deleted
#  by the system.  A given log file must be archived to tape before that
#  position in the circular list of log directories (STN_TRAN_LOG_DIRECTORIES)
#  is needed again. 
#    If FALSE, only transactions smaller than STN_TRAN_LOG_LIMIT are logged; 
#  larger transactions become checkpoints, and log files are deleted by
#  the system when the circular list of log directories wraps around.
#
#  Once stone has been started on a repository with 
#      STN_TRAN_FULL_LOGGING = TRUE, then the TRUE state
#  will persist in the repository and subsequent changes to this parameter
#  in the config file will be ignored.  To change the repository back to
#  partial logging you must do a full backup and then restore the backup into
#  a copy of $GEMSTONE/bin/extent0.dbf .
#
# Default: none, a value must be provided here.
STN_TRAN_FULL_LOGGING = FALSE;

#=========================================================================
# STN_TRAN_LOG_LIMIT
#   When  STN_TRAN_FULL_LOGGING = FALSE, transactions consuming more than 
#    this amount of log file space will be promoted to a checkpoint. 
# Default: 100  Min: 25 Max: 500  Units: KBytes
#STN_TRAN_LOG_LIMIT = 100;

#=========================================================================
# STN_TRAN_LOG_DIRECTORIES
#   List of directories or raw disk partitions used for transaction logging.
#   This list defines the maximum number of log files that will be on-line
#   at once.  
# Default: none; this list must contain at least two entries.
STN_TRAN_LOG_DIRECTORIES = /dev/rdsk/c0t1d0s3, /dev/rdsk/c0t1d0s4 ;

#=========================================================================
# STN_TRAN_LOG_SIZES
#   Maximum size of log files, must have same number of elements as
#   STN_TRAN_LOG_DIRECTORIES.  
#  Units: Megabytes , Min: 1, Max: 4294     (1 Megabyte = 1048576 bytes) .
# Default: none; this list must contain at least two entries.
STN_TRAN_LOG_SIZES = 140, 140;

#=========================================================================
# STN_TRAN_LOG_PREFIX
#
#   File name prefixes of transaction log files and their replicates.
#   Values of "tranlog" and "repltranlog" will produce filenames
#   tranlog1.dbf, tranlog2.dbf ....  and repltranlog1, repltranlog2, etc.
#   for the transaction log files and their replicates respectively.
#   (Valid only for log files which are not on raw partitions.)
#   
#   If there are no replicates, the replicate prefix is ignored.
#
# Default: tranlog and repltranlog for the transaction logs and their 
#          replicates respectively.
#
#STN_TRAN_LOG_PREFIX = tranlog;

#=========================================================================
# STN_TRAN_LOG_DEBUG_LEVEL
# For Servio internal use.  Customers should use default value 0.
#STN_TRAN_LOG_DEBUG_LEVEL = 3;
STN_TRAN_LOG_DEBUG_LEVEL = 0;

#=========================================================================
# STN_CHECKPOINT_INTERVAL 
#   maximum interval in seconds between checkpoints.  Checkpoints may
#   be written more often, depending on other factors.
# Default: 300 , Min: 5 , Max: 1800  Units: seconds 
# STN_CHECKPOINT_INTERVAL = 300;

#=========================================================================
# STN_GC_SESSION_ENABLED
#   If true, allows stone to spawn a special Gem session that reclaims
#   unused space in disk pages and also implements the EpochGarbageCollector.
# Default: TRUE
#STN_GC_SESSION_ENABLED = TRUE;

#=========================================================================
# STN_REMOTE_CACHE_TIMEOUT
#  Time in minutes after the last active process on a remote host logs out 
#  before Stone shuts down the SharedPageCache on that host.  
#  Negative timeouts are not allowed.  
#  Default: 5  Min: 1 
# STN_REMOTE_CACHE_TIMEOUT = 5;

#=========================================================================
# STN_SIGNAL_ABORT_CR_BACKLOG: number of old transactions, above which
#  stone will start to generate SignalAbort messages to a gem that is
#  running outside of a transaction. This option should not exceed the 
#  value of STN_MAX_SESSIONS.
#  Default: 20
#STN_SIGNAL_ABORT_CR_BACKLOG = 20;

#=========================================================================
# DBF_EXTENT_NAMES:  List of all DBF extents, in order, primary extent first,
#  separated by commas.
# VMS GemStone transforms $GEODE/data/ into GEODE:[data]
# Default: NONE -- stone will not run without an extent list defined here.
DBF_EXTENT_NAMES = /dev/rdsk/c0t3d0s7 ;

#=========================================================================
# DBF_EXTENT_SIZES: List of maximum sizes of all DBF extents, in order, 
#  primary extent first, separated by commas, each size applies to  the
#  corresponding extent in the list of extents specified in DBF_EXTENT_NAMES.
#  The sizes are in units of Megabytes (1 Megabyte = 1048576 bytes) .
# Default: empty (no maximum sizes, extent can grow until disk fills) 
DBF_EXTENT_SIZES = 190 ;

#=========================================================================
# DBF_ALLOCATION_MODE:  Description of space allocation heuristic to be used
#  when filling DBF extents. 
#  Permissible values: either SEQUENTIAL, or a series of allocation weights,
#    separated by commas, each weight corresponding to each extent in the
#    series of extents specified in DBF_EXTENT_NAMES.
# Default: SEQUENTIAL
# DBF_ALLOCATION_MODE = SEQUENTIAL;

#=========================================================================
# DBF_PRE_GROW:  Pre-grow all new DBF extents to maximum size allowed.
# Warning: This can fill your disk partition if the DBF extent is a file!
# Default:  FALSE
#DBF_PRE_GROW = TRUE;

#=========================================================================
# DBF_SCRATCH_DIR:  A scratch directory that the stone process can use to
#  create "scratch" DBFs, used during pageaudit and page repair.  The file
#  name is appended to the directory name WITHOUT an intervening delimiter,
#  so a trailing delimiter is necessary here.
# VMS GemStone transforms $GEODE/data/ into GEODE:[data]
# Default: $GEODE/data/
#DBF_SCRATCH_DIR = $GEODE/data/;

#=========================================================================
# DUMP_OPTIONS:  Dump summary of all configuration options.
#  Unfortunately this is a dump of all options listed in the configuration
#  file , whether or not the option is actually processed by the
#  executable doing the printing.  (See usage of options above )
#
# Default: TRUE
#  Used by all executables.
#DUMP_OPTIONS = TRUE;

#=========================================================================
# GEM_PRIVATE_PAGE_CACHE_KB:  Size of gem's private page cache in K Bytes
#  (also applies to  topazl, gcilnkobj.o).
# Default: 500, min: 64, max: 65536
#GEM_PRIVATE_PAGE_CACHE_KB = 500;

#=========================================================================
# GEM_TEMPOBJ_CACHE_SIZE:  Size of gem temporary object space in K Bytes
#  (also applies to  topazl, gcilnkobj.o).
# Default: 585, min: 200, max: 10000 
GEM_TEMPOBJ_CACHE_SIZE = 1500;


#=========================================================================
# LOG_WARNINGS:  Print warnings involving invalid configuration options.
# Default: TRUE
#  Used by all executables
#LOG_WARNINGS = TRUE;

#=========================================================================
# GEM_SHR_PAGE_CACHE_ENABLED :  Specifies whether a GEM should use a shared 
#   page cache.  If it is enabled and there is a cache already created it is
#   used.  If there is no shared cache on the system one is created using
#   the options SHR_PAGE_CACHE_SIZE_KB and SHR_PAGE_CACHE_NUM_PROCS.
#   If you disable the shared page cache, increase GEM_PRIVATE_PAGE_CACHE_KB
#   to compensate; a minimum size of 5000 K Bytes is recommended, or 8000 K 
#   Bytes if you're using GeODE.
#                   
# Default: TRUE
#GEM_SHR_PAGE_CACHE_ENABLED = TRUE;

#=========================================================================
# SHR_PAGE_CACHE_LOCKED : Specifies whether the shared page cache should
#   locked (frozen) in (main) memory. This is a performance related option.
#   On machines where a portion of memory can be dedicated to GemStone, this
#   option will provide higher performance.
#
#   In order for this option to take effect, the user may require special
#   operating system dependent privileges: eg. on HPUX, the user's group
#   must have MLOCK privileges. If the user does not have the privileges,
#   an error message will be logged and the system will continue.
#
# Default: FALSE
SHR_PAGE_CACHE_LOCKED = TRUE;

#=========================================================================
# SHR_PAGE_CACHE_SIZE_KB:  Size of shared page cache in K Bytes.
# Default: 10000, min: 512 
#      maximum: limited by system memory and kernel configurations
#
#SHR_PAGE_CACHE_SIZE_KB = 10000;

#=========================================================================
# STN_NUM_LOCAL_AIO_SERVERS
# Number of pgsvr processes to start as local async IO servers for the
# shared page cache on stone's machine.  Do not alter this parameter without
# consulting Servio customer support.
#
# Default: 1  Min: 0 Max: 1
#STN_NUM_LOCAL_AIO_SERVERS = 1;

#=========================================================================
# SHR_PAGE_CACHE_NUM_PROCS:  Max number of processes allowed to attach
#  to the cache.
# Default: 15, min: 15, use -1 to set the max allowed on the system 
#SHR_PAGE_CACHE_NUM_PROCS = 15;

#=========================================================================
# SHR_SPIN_LOCK_COUNT :  Specifies the number of trys to get a spin lock
#   before sleeping on a semaphore.  The default value is "1".
#   In single processor host architectures, this value should be "1" since 
#   there is no value in spinning (it won't change until the process holding
#   the lock gets scheduled).  On multiple processor host architectures, 
#   the value will need to be tuned (try starting at around 2000).
#   The value -1 can be used to indicate that the system should use the
#   correct default (either 1 or 2000) based upon the number of cpu's
#   available on the host. Currently only Solaris, HP-UX, and Dynix
#   supports detection of the number of cpus.
# Default: 1 
SHR_SPIN_LOCK_COUNT = -1;

#=========================================================================
# STN_PRIVATE_PAGE_CACHE_KB:  Size of stone private page cache in K Bytes.
# Default: 1000, min: 64, max: 65536 
#STN_PRIVATE_PAGE_CACHE_KB = 1000;

#=========================================================================
# STN_LOAD_THRESHOLD: Obsolete - not used in 4.0

#=========================================================================
# STN_LARGE_CR_BACKLOG: Obsolete - not used in 4.0

#=========================================================================
# STN_LARGE_SCAV_BACKLOG: Obsolete - not used in 4.0

#=========================================================================
# STN_MAX_PAGES_PER_SCAV: Obsolete - not used in 4.0

#=========================================================================
# STN_HALT_ON_FATAL_ERR: If TRUE, stone will halt and dump core if it
#   receives a notification from a gem that the gem died with a fatal error.
#   The value FALSE will cause stone to attempt to keep running if
#   a gem encounters a fatal error.
# Default: TRUE
#STN_HALT_ON_FATAL_ERR = TRUE;

#=========================================================================
# STN_MAX_SESSIONS: limit on number of simultaneous database sessions
#  (number of Gem logins to Stone).  The actual limit used by Stone is
#  the value of this parameter or the number of sessions specified by
#  the software license keyfile, whichever is less.  This parameter is
#  provided to allow number of users to be restricted to avoid
#  overloading the host computer, and for use by Servio QA testing.
# Default: 40 , min: 1, max: 2048
#  Recommended value: 40, unless you are really using more sessions.
#STN_MAX_SESSIONS = 40;


#=========================================================================
# GEM_RPCGCI_TIMEOUT
#  Time in minutes after which lack of an Rpc Gci command will cause a Gem
#  to terminate.  Negative timeouts are not allowed.  Resolution of timeouts
#  is one half the specified timeout interval. 
#  Default: 0 (gem waits forever)  Min: 0
# GEM_RPCGCI_TIMEOUT = 0;

#=========================================================================
# STN_GEM_TIMEOUT
#  Time in minutes after which lack of interaction with Stone will cause a Gem
#  to terminate. Negative timeouts are not allowed.  Resolution of timeouts
#  is one half the specified timeout interval.   If non-zero this timeout
#  is also the maximum time allowed for a gem to complete processing of
#  its login to stone.  If this timeout is 0, the maximum time for gem to
#  stone login processing is set to 5 minutes.
#
#  Default: 0 (stone waits forever) Min: 0 
# STN_GEM_TIMEOUT = 0;

#=========================================================================
# STN_GEM_ABORT_TIMEOUT
# Time in minutes that stone will wait for a gem running outside of a 
# transaction to abort to release a commit record, after stone has signaled 
# that gem that it should abort.  If the time expires before the gem aborts, 
# the gem will be forcibly aborted by stone; forcible abort means the Gem will 
# receive the error ABORT_ERR_LOST_OT_ROOT, and the gem will have to completely 
# reinitialize its object caches.
# Negative timeouts are not allowed.  Resolution of timeouts
# is one half the specified timeout interval. 
#  Default: 1 Min: 1  max: 1440
# STN_GEM_ABORT_TIMEOUT = 1;

#=========================================================================
# GEM_HALT_ON_ERROR
# Cause Gem to halt and dump core if an error with the specified 
# GemStone error number occurs.  The value 0 means "never halt".  
# Normally used only to assist Servio Customer support in diagnosing problems.
#  Default: 0 
# GEM_HALT_ON_ERROR = 0;


# End of Default GemStone Configuration Options

# Options below here have been added, either by the GemStone system
# administrator, or automatically by the database monitor (Stone).
#=========================================================================
